apiVersion: apps/v1
kind: Deployment
metadata:
  name: tocgenerator-deploy
  namespace: default
  labels:
    app: tocgenerator-deploy
spec:
  replicas: 2
  revisionHistoryLimit: 2 # how many old ReplicaSets for this Deployment you want to retain, https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy
  selector:
    matchLabels:
      app: tocgenerator-server
  minReadySeconds: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: tocgenerator-server
    spec:
      containers:        
        - name: tocgenerator
          image: lzw5399/tocgenerator:latest
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "256Mi"
              cpu: "100m"
          # readinessProbe:
          #   tcpSocket:
          #     port: 80
          #   initialDelaySeconds: 60
          #   periodSeconds: 10
          # livenessProbe:
          #   httpGet:
          #     path: /toc/health
          #     port: 80
          #   initialDelaySeconds: 60
          #   periodSeconds: 60
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: tocgenerator-svc
spec:
  type: NodePort
  selector:
    app: tocgenerator-server
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30075

# ingress暂时用不了
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: tocgenerator-ingress
# spec:
#   tls:
#     - hosts:
#       - toc.codepie.fun
#       secretName: toc-secret
#   rules:
#     - host: toc.codepie.fun
#       http:
#         paths:
#           - path: /
#             backend:
#               serviceName: tocgenerator-svc
#               servicePort: 80